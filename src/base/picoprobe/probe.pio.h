// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ----- //
// probe //
// ----- //

#define probe_wrap_target 0
#define probe_wrap 15

#define probe_offset_out_negedge 0u
#define probe_offset_in_posedge 9u

static const uint16_t probe_program_instructions[] = {
            //     .wrap_target
    0xf081, //  0: set    pindirs, 1      side 0     
    0x80a0, //  1: pull   block                      
    0xa027, //  2: mov    x, osr                     
    0x80a0, //  3: pull   block                      
    0x7001, //  4: out    pins, 1         side 0     
    0x1844, //  5: jmp    x--, 4          side 1     
    0xf001, //  6: set    pins, 1         side 0     
    0x8020, //  7: push   block                      
    0x0000, //  8: jmp    0                          
    0xf080, //  9: set    pindirs, 0      side 0     
    0x80a0, // 10: pull   block                      
    0xa027, // 11: mov    x, osr                     
    0x5801, // 12: in     pins, 1         side 1     
    0x104c, // 13: jmp    x--, 12         side 0     
    0x8020, // 14: push   block                      
    0x0009, // 15: jmp    9                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program probe_program = {
    .instructions = probe_program_instructions,
    .length = 16,
    .origin = -1,
};

static inline pio_sm_config probe_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + probe_wrap_target, offset + probe_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

